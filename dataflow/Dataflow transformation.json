{
	"name": "Dataflow transformation",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"dataset": {
						"referenceName": "AzureSQL",
						"type": "DatasetReference"
					},
					"name": "source1"
				},
				{
					"dataset": {
						"referenceName": "AzureSQL",
						"type": "DatasetReference"
					},
					"name": "source2"
				}
			],
			"sinks": [
				{
					"dataset": {
						"referenceName": "ParquetOutput",
						"type": "DatasetReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				},
				{
					"name": "select1"
				},
				{
					"name": "sort1"
				},
				{
					"name": "joinColumns"
				}
			],
			"scriptLines": [
				"source(output(",
				"          ProductID as integer,",
				"          Date as string,",
				"          Zip as string,",
				"          Units as integer,",
				"          Revenue as decimal(18,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source1",
				"source(output(",
				"          ProductID as integer,",
				"          Date as string,",
				"          Zip as string,",
				"          Units as integer,",
				"          Revenue as decimal(18,4)",
				"     ),",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     isolationLevel: 'READ_UNCOMMITTED',",
				"     format: 'table') ~> source2",
				"joinColumns derive(ProductID = source1@ProductID) ~> derivedColumn1",
				"derivedColumn1 select(mapColumn(",
				"          ProductID,",
				"          Date = source1@Date,",
				"          Zip = source1@Zip,",
				"          Units = source1@Units,",
				"          Revenue = source1@Revenue",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"select1 sort(asc(ProductID, true)) ~> sort1",
				"source1, source2 join(source1@Date == source2@Date,",
				"     joinType:'inner',",
				"     matchType:'exact',",
				"     ignoreSpaces: false,",
				"     broadcast: 'auto')~> joinColumns",
				"sort1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'parquet',",
				"     umask: 0022,",
				"     preCommands: [],",
				"     postCommands: [],",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> sink1"
			]
		}
	}
}